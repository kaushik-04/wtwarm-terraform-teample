name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:r)

parameters:
  - name: removeDeployment
    displayName: Remove resources post-deployment
    type: boolean
    default: true

variables:
  - template: /cicd/global.variables.yml
  - name: moduleName
    value: keyvault
  - name: moduleVersion
    value: "1.0"
  - name: initiativesFolderPath
    value: /modules/keyvault/1.0/policies/initiatives
  - name: majorVersion
    value: 1
  - name: minorVersion
    value: 0
  - name: policyServiceConnection
    ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      value: pxs-cloudnative-mg
    ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      value: pxs-cn-s-ccoe-sub

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - cicd/*
      - common/1.0/scripts/*
      - modules/keyvault/1.0/*
    exclude:
      - modules/keyvault/1.0/readme.md

stages:
  - stage: Validation
    jobs:
      - template: /cicd/templates/pipeline.jobs.validate.yml
        parameters:
          deploymentBlocks:
            - path: $(parametersPath)/deploy.parameters.json

  - stage: PolicyDefinition
    dependsOn: Validation
    jobs:
      - template: /modules/policyDefinition/1.0/pipeline/azure.pipeline.yml
        parameters:
          serviceConnection: $(policyServiceConnection)
          managementGroupId: $(policyServiceConnection)
          policyDefinitionsPath: $(modulePath)/policies/policyDefinitions

  - stage: InitiativeDefinition
    dependsOn: PolicyDefinition
    jobs:
      - template: /modules/initiativeDefinition/1.0/pipeline/azure.pipeline.yml
        parameters:
          serviceConnection: $(policyServiceConnection)
          managementGroupId: $(policyServiceConnection)
          initiativeDefinitionsPath: $(modulePath)/policies/initiativeDefinitions

  - stage: PolicyAssignment
    dependsOn: InitiativeDefinition
    jobs:
      - template: /modules/policyAssignment/1.0/pipeline/azure.pipeline.yml
        parameters:
          serviceConnection: $(policyServiceConnection)
          policyAssignmentsPath: $(modulePath)/policies/policyAssignments

  - stage: Deployment
    jobs:
      - template: /cicd/templates/pipeline.jobs.deploy.yml
        parameters:
          removeDeployment: "${{ parameters.removeDeployment }}"
          deploymentBlocks:
            - path: $(parametersPath)/deploy.parameters.json

  - stage: Publishing
    jobs:
    - template: /cicd/templates/pipeline.jobs.publish.yml
      parameters:
        majorVersion: '$(majorVersion)'
        minorVersion: '$(minorVersion)'

  - stage: Removal
    dependsOn: Deployment
    condition: and(succeededOrFailed(), eq( '${{ parameters.removeDeployment }}', 'true'))
    jobs:
    - template: /cicd/templates/pipeline.jobs.remove.yml
