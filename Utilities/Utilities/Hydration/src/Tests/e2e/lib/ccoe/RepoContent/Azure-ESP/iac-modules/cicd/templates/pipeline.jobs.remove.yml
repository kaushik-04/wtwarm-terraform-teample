#########################################################
## REMOVAL PIPELINE                                    ##
#########################################################
##
## This pipeline template contains the logic to remove resources that are indentified by a special remove-tag
## As such, the script is only capable to remove deployed resource-group level services  
##
#################################################################
##
##---------------------------------------------##
## TEMPLATE PARAMETERS                         ##
##---------------------------------------------##
##
## By default it uses the variables specified in the below [parameters] section. However, you can overwrite these variables in the 
##    referencing pipeline by providing the paramater explicitly. 
##
## NOTE: If you don't need to overwrite a shared value, you can IGNORE this section 
##
##   |========================================================================================================================================================================================================================|
##   | Parameter                       | Default Value                        | Description                                                                                               | Example                           |
##   |---------------------------------|--------------------------------------|-----------------------------------------------------------------------------------------------------------|-----------------------------------|
##   | displayName                     | 'Remove module'                      | Name for the pipeline job                                                                                 | 'Remove KeyVault'                 |
##   | serviceConnection               | '$(serviceConnection)'               | The service connection that connects to Azure                                                             | 'demo-internal'                   |
##   | poolName                        | '$(poolName)'                        | You can provide either a [poolname] or [vmImage] to run the job on                                        | 'Custom Deployment Pool'          |
##   | vmImage                         | '$(vmImage)'                         | You can provide either a [poolname] or [vmImage] to run the job on                                        | 'ubuntu20.04'                     |
##   | defaultJobTimeoutInMinutes      | 120                                  | The timeout for the job in this pipeline                                                                  | 120                               |
##   | modulesPath                     | '$(modulesPath)'                     | The path to the modules folder root (one level above folder representing the module                       | 'Modules/ARM'                     |
##   | moduleName                      | '$(moduleName)'                      | The name of the module to remove                                                                          | 'KeyVault'                        |
##   | moduleVersion                   | '$(moduleVersion)'                   | The version to of the module, represented as a folder under the folder representing the module            | '1.0'                             |
##   | resourceGroupName               | '$(resourceGroupName)'               | The resourcegroup to remove the resource from                                                             | 'validation-rg'                   |
##   | maximumRemovalRetries           | '$(maximumRemovalRetries)'           | Amount of times to retry a removal of resources in a loop                                                 | 3                                 |
##   | azurePowerShellVersion          | '$(azurePowerShellVersion)'          | Used for configuring the Azure PowerShellModules Version, one of the example values.                      | 'latestVersion' or 'OtherVersion' |
##   | preferredAzurePowerShellVersion | '$(preferredAzurePowerShellVersion)' | Used for configuring the Azure PowerShellModules Version, either an empty string or the specific version. | '4.4.0'                           |
##   |========================================================================================================================================================================================================================|
##
##---------------------------------------------##

parameters:
  # Pipeline-related parameters
  displayName: 'Remove module'
  serviceConnection: '$(serviceConnection)'
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  # Logic-related parameters
  modulesPath : '$(modulesPath)'
  moduleName: '$(moduleName)'
  moduleVersion: '$(moduleVersion)'
  resourceGroupName: '$(resourceGroupName)'
  maximumRemovalRetries: '$(maximumRemovalRetries)'
  # Azure PowerShell Version parameter
  azurePowerShellVersion: '$(azurePowerShellVersion)'
  preferredAzurePowerShellVersion: '$(preferredAzurePowerShellVersion)'
  
##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
- job:
  displayName: ${{ parameters.displayName }}
  timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
  pool:
    ${{ if ne(parameters.vmImage, '') }}:
      vmImage: ${{ parameters.vmImage }}
    ${{ if ne(parameters.poolName, '') }}:
      name: ${{ parameters.poolName }}
  steps:
  - task: AzurePowerShell@5
    displayName: 'Remove [${{ parameters.moduleName }}] in [${{ parameters.resourceGroupName }}] via [${{ parameters.serviceConnection }}]'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      azurePowerShellVersion: ${{ parameters.azurePowerShellVersion }}
      preferredAzurePowerShellVersion: ${{ parameters.preferredAzurePowerShellVersion }}
      ScriptType: InlineScript
      failOnStandardError: false
      pwsh: true
      inline: |
        # ---------------------------- #
        # HANDLE MULTI-REPO INVOCATION #
        # ---------------------------- #
        $componentsBasePath = "$(System.DefaultWorkingDirectory)"

        if( "${{ join(';',parameters.checkoutRepositories) }}".length -gt 0) {
          $componentsBasePath = Join-Path $componentsBasePath '$(modulesRepository)'
        }

        # ---------------------------- #
        # IMPORT MODULES               #
        # ---------------------------- #
        Import-Module "$componentsBasePath/common/1.0/scripts/Import-Common.psm1" -Force -DisableNameChecking
      
        # -------------- #
        # INVOKE REMOVAL #
        # -------------- #
        $functionInput = @{
          moduleName            = '${{ parameters.moduleName }}'
          resourceGroupName     = '${{ parameters.resourceGroupName }}'
          maximumRemovalRetries = ('${{ parameters.maximumRemovalRetries }}' -as [int])
          modulePath            = '${{ parameters.modulesPath }}/${{ parameters.moduleName }}/${{ parameters.moduleVersion }}'
          componentsBasePath    = $componentsBasePath
        }

        Write-Output "Invoke task with"
        $functionInput

        Remove-DeployedModule @functionInput -Verbose
