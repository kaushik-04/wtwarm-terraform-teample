{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentScheduleName": {
            "type": "string",
            "metadata": {
                "description": "Required. The name of the Deployment schedule."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for the resource."
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of the Automation Account to deploy the schedule to."
            }
        },
        "operatingSystem": {
            "type": "string",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "metadata": {
                "description": "Required. The operating system to be configured by the deployment schedule."
            }
        },
        "maintenanceWindow": {
            "type": "string",
            "defaultValue": "PT2H",
            "metadata": {
                "description": "Required. Maximum time allowed for the deployment schedule to run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601"
            }
        },
        "updateClassifications": {
            "type": "array",
            "allowedValues": [
                "Critical",     //Both
                "Security",     //Both
                "UpdateRollup", //Windows only
                "FeaturePack",  //Windows only
                "ServicePack",  //Windows only
                "Definition",   //Windows only
                "Tools",        //Windows only
                "Updates",      //Windows only
                "Other"         //Linux only
            ],
            "defaultValue": [
                "Critical",
                "Security"
            ],
            "metadata": {
                "description": "Optional. Update classification included in the deployment schedule."
            }
        },
        "rebootSetting": {
            "type": "string",
            "allowedValues": [
                "IfRequired",
                "Never",
                "RebootOnly",
                "Always"
            ],
            "metadata": {
                "description": "Required. Reboot setting for the deployment schedule."
            }
        },
        "excludeUpdates": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. KB numbers or Linux packages excluded in the deployment schedule."
            }
        },
        "includeUpdates": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. KB numbers or Linux packages included in the deployment schedule."
            }
        },
        "scopeByResources": {
            "type": "array",
            "defaultValue": [
                "[subscription().id]"
            ],
            "metadata": {
                "description": "Optional. Specify the resources to scope the deployment schedule to."
            }
        },
        "scopeByTags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional. Specify tags to which to scope the deployment schedule to."
            }
        },
        "scopeByTagsOperation": {
            "type": "string",
            "defaultValue": "All",
            "allowedValues": [
                "All",
                "Any"
            ],
            "metadata": {
                "description": "Optional. Enables the scopeByTags to require All (Tag A and Tag B) or Any (Tag A or Tag B)."
            }
        },
        "scopeByLocations": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Specify locations to which to scope the deployment schedule to."
            }
        },
        "preTaskParameters": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional. Parameters provided to the task running before the deployment schedule."
            }
        },
        "preTaskSource": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The source of the task running before the deployment schedule."
            }
        },
        "postTaskParameters": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional. Parameters provided to the task running after the deployment schedule."
            }
        },
        "postTaskSource": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The source of the task running after the deployment schedule."
            }
        },
        "interval": {
            "type": "int",
            "maxValue": 100,
            "defaultValue": 0,
            "metadata": {
                "description": "Optional. The interval of the frequency for the deployment schedule. 1 Hour is every hour, 2 Day is every second day, etc."
            }
        },
        "frequency": {
            "type": "string",
            "allowedValues": [
                "OneTime",
                "Hour",
                "Day",
                "Week",
                "Month"
            ],
            "metadata": {
                "description": "Required. The frequency of the deployment schedule. When using 'Hour', 'Day', 'Week' or 'Month', an interval needs to be provided."
            }
        },
        "isEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Optional. Enables the deployment schedule."
            }
        },
        "timeZone": {
            "type": "string",
            "defaultValue": "UTC",
            "metadata": {
                "description": "Optional. Time zone for the deployment schedule. IANA ID or a Windows Time Zone ID."
            }
        },
        "nonAzureQueries": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Array of functions from a Log Analytics workspace, used to scope the deployment schedule."
            }
        },
        "azureVirtualMachines": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. List of azure resource Ids for azure virtual machines in scope for the deployment schedule."
            }
        },
        "nonAzureComputerNames": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. List of names of non-azure machines in scope for the deployment schedule."
            }
        },
        "weekDays": {
            "type": "array",
            "defaultValue": [],
            "allowedValues": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
            ],
            "metadata": {
                "description": "Optional. Required when used with frequency 'Week'. Specified the day of the week to run the deployment schedule."
            }
        },
        "monthDays": {
            "type": "array",
            "defaultValue": [],
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31
            ],
            "metadata": {
                "description": "Optional. Can be used with frequency 'Month'. Provides the specific days of the month to run the deployment schedule."
            }
        },
        "monthlyOccurrences": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Can be used with frequency 'Month'. Provides the pattern/cadence for running the deployment schedule in a month. Takes objects formed like this {occurance(int),day(string)}. Day is the name of the day to run the deployment schedule, the occurance specifies which occurance of that day to run the deployment schedule."
            }
        },
        "startTime": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The start time of the deployment schedule in ISO 8601 format. To specify a specific time use YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00. For schedules where we want to start the deployment as soon as possible, specify the time segment only in 24 hour format, HH:MM, 22:00."
            }
        },
        "expiryTime": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The end time of the deployment schedule in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00"
            }
        },
        "expiryTimeOffsetMinutes": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Optional. The expiry time's offset in minutes."
            }
        },
        "nextRun": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The next run time of the deployment schedule in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00"
            }
        },
        "nextRunOffsetMinutes": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Optional. The next run time's offset in minutes."
            }
        },
        "description": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The schedules description."
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Generated. Do not touch. Is used to provide the base time for time comparrison for startTime. If startTime is specified in HH:MM format, baseTime is used to check if the provided startTime has passed, adding one day before setting the deployment schedule."
            }
        },
        "cuaId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
            }
        }
    },
    "functions": [
        {
            "namespace": "Array",
            "members": {
                "ConvertToString": {
                    "parameters": [
                        {
                            "name": "arrayToConvert",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[replace(replace(replace(replace(string(parameters('arrayToConvert')),',',', '),'[',''),']',''),'\"','')]"
                    }
                }
            }
        }
    ],
    "variables": {
        "updateClassifications": "[if(equals(parameters('operatingSystem'), 'Windows'),
            'includedUpdateClassifications',
            'includedPackageClassifications'
        )]",
        "exclude": "[if(equals(parameters('operatingSystem'), 'Windows'),
            'excludedKbNumbers',
            'excludedPackageNameMasks'
        )]",
        "include": "[if(equals(parameters('operatingSystem'), 'Windows'),
            'includedKbNumbers',
            'includedPackageNameMasks'
        )]",
        "timeLimit": "[dateTimeAdd(parameters('baseTime'), 'PT5M', 'u')]",
        "providedStartTime": "[dateTimeAdd(parameters('startTime'), 'PT0S', 'u')]",
        "startTime": "[
            if( greater( variables('providedStartTime'), variables('timeLimit') ),
                variables('providedStartTime'),
                dateTimeAdd(variables('providedStartTime'), 'P1D', 'u')
        )]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[concat('pid-', parameters('cuaId'))]",
            "condition": "[not(empty(parameters('cuaId')))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations",
            "name": "[concat(parameters('automationAccountName'),'/',parameters('DeploymentScheduleName'))]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "updateConfiguration": {
                    "operatingSystem": "[parameters('operatingSystem')]",
                    "duration": "[parameters('maintenanceWindow')]",
                    "[parameters('operatingSystem')]": {
                        "[variables('updateClassifications')]": "[Array.ConvertToString(parameters('updateClassifications'))]",
                        "[variables('exclude')]": "[parameters('excludeUpdates')]",
                        "[variables('include')]": "[parameters('includeUpdates')]",
                        "rebootSetting": "[parameters('rebootSetting')]"
                    },
                    "targets": {
                        "azureQueries": [
                            {
                                "scope": "[parameters('scopeByResources')]",
                                "tagSettings": {
                                    "tags": "[parameters('scopeByTags')]",
                                    "filterOperator": "[parameters('scopeByTagsOperation')]"
                                },
                                "locations": "[parameters('scopeByLocations')]"
                            }
                        ],
                        "nonAzureQueries": "[parameters('nonAzureQueries')]"
                    },
                    "azureVirtualMachines": "[parameters('azureVirtualMachines')]",
                    "nonAzureComputerNames": "[parameters('nonAzureComputerNames')]"
                },
                "tasks": {
                    "preTask": {
                        "parameters": "[parameters('preTaskParameters')]",
                        "source": "[parameters('preTaskSource')]"
                    },
                    "postTask": {
                        "parameters": "[parameters('postTaskParameters')]",
                        "source": "[parameters('postTaskSource')]"
                    }
                },
                "scheduleInfo": {
                    "interval": "[parameters('interval')]",
                    "frequency": "[parameters('frequency')]",
                    "isEnabled": "[parameters('isEnabled')]",
                    "timeZone": "[parameters('timeZone')]",
                    "advancedSchedule": {
                        "weekDays": "[if(empty(parameters('weekDays')),null(),parameters('weekDays'))]",
                        "monthDays": "[if(empty(parameters('monthDays')),null(),parameters('monthDays'))]",
                        "monthlyOccurrences": "[if(empty(parameters('monthlyOccurrences')),null(),parameters('monthlyOccurrences'))]"
                    },
                    "startTime": "[variables('startTime')]",
                    "expiryTime": "[parameters('expiryTime')]",
                    "expiryTimeOffsetMinutes": "[parameters('expiryTimeOffsetMinutes')]",
                    "nextRun": "[parameters('nextRun')]",
                    "nextRunOffsetMinutes": "[parameters('nextRunOffsetMinutes')]",
                    "description": "[parameters('description')]"
                }
            }
        }
    ],
    "outputs": {
        "deploymentScheduleName": {
            "type": "string",
            "value": "[concat(parameters('automationAccountName'),'/',parameters('DeploymentScheduleName'))]",
            "metadata": {
                "description": "The name of the Software Update Configuration."
            }
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Automation/automationAccounts/softwareUpdateConfigurations', parameters('automationAccountName'),parameters('DeploymentScheduleName'))]",
            "metadata": {
                "description": "The Resource Id of the Software Update Configuration."
            }
        },
        "automationAccountName": {
            "type": "string",
            "value": "[parameters('automationAccountName')]",
            "metadata": {
                "description": "The Automation Account the Software Update Configuration was deployed to."
            }
        },
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The Resource Group the Software Update Configuration was deployed to."
            }
        }
    }
}
