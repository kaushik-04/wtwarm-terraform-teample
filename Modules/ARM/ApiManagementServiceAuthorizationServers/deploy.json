{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceAuthorizationServerName": {
      "type": "string",
      "metadata": {
        "description": "Required. Identifier of the authorization server."
      }
    },
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the of the Api Management service."
      }
    },
    "authorizationEndpoint": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required. OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
      }
    },
    "authorizationMethods": {
      "type": "array",
      "defaultValue": [ "GET" ],
      "metadata": {
        "description": "Optional. HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional. - HEAD, OPTIONS, TRACE, GET, POST, PUT, PATCH, DELETE"
      }
    },
    "bearerTokenSendingMethods": {
      "type": "array",
      "defaultValue": [ "authorizationHeader" ],
      "metadata": {
        "description": "Required. Specifies the mechanism by which access token is passed to the API. - authorizationHeader or query"
      }
    },
    "clientAuthenticationMethod": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Required. Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format. - Basic or Body"
      }
    },
    "clientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required. Client or app id registered with this authorization server."
      }
    },
    "clientRegistrationEndpoint": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required. Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
      }
    },
    "clientSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Required. Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
      }
    },
    "defaultScope": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Description of the authorization server. Can contain HTML formatting tags."
      }
    },
    "grantTypes": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Required. Form of an authorization grant, which the client uses to request the access token. - authorizationCode, implicit, resourceOwnerPassword, clientCredentials"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "resourceOwnerPassword": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
      }
    },
    "resourceOwnerUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
      }
    },
    "supportState": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
      },
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "tokenBodyParameters": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}. - TokenBodyParameterContract object"
      }
    },
    "tokenEndpoint": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. OAuth token endpoint. Contains absolute URI to entity being referenced."
      }
    }
  },
  "variables": {
    "defaultAuthorizationMethods": [ "GET" ],
    "setAuthorizationMethods": "[union(parameters('authorizationMethods'), variables('defaultAuthorizationMethods'))]"
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[concat('pid-', parameters('cuaId'))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
          ]
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/authorizationServers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('apiManagementServiceName'),'/',parameters('apiManagementServiceAuthorizationServerName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "description": "[parameters('description')]",
        "authorizationMethods": "[variables('setAuthorizationMethods')]",
        "clientAuthenticationMethod": "[parameters('clientAuthenticationMethod')]",
        "tokenBodyParameters": "[parameters('tokenBodyParameters')]",
        "tokenEndpoint": "[parameters('tokenEndpoint')]",
        "supportState": "[parameters('supportState')]",
        "defaultScope": "[parameters('defaultScope')]",
        "bearerTokenSendingMethods": "[parameters('bearerTokenSendingMethods')]",
        "resourceOwnerUsername": "[parameters('resourceOwnerUsername')]",
        "resourceOwnerPassword": "[parameters('resourceOwnerPassword')]",
        "displayName": "[parameters('apiManagementServiceAuthorizationServerName')]",
        "clientRegistrationEndpoint": "[parameters('clientRegistrationEndpoint')]",
        "authorizationEndpoint": "[parameters('authorizationEndpoint')]",
        "grantTypes": "[parameters('grantTypes')]",
        "clientId": "[parameters('clientId')]",
        "clientSecret": "[parameters('clientSecret')]"
      },
      "resources": []
    }
  ],
  "functions": [
  ],
  "outputs": {
    "apimServiceAuthorizationServerResourceName": {
      "type": "string",
      "value": "[parameters('apiManagementServiceAuthorizationServerName')]",
      "metadata": {
        "description": "The Api Management Service Authorization Server Name"
      }
    },
    "apimServiceAuthorizationServerResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceAuthorizationServerName'))]",
      "metadata": {
        "description": "The Resource Id of the Api Management Service Authorization Server"
      }
    },
    "apimServiceAuthorizationServerResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the Api Management Service Authorization Server"
      }
    }
  }
}